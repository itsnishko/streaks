

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["prismaSchemaFolder"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Activity {
  id          String   @id @default(uuid())
  name        String
  isActive    Boolean
  description String?
  createdOn   DateTime @default(now())
  createdBy   String
  updatedOn   DateTime @default(now())
  updatedBy   String
  records     Record[]
  metrics     Metric[]
}

model Metric {
  id          String   @id @default(uuid())
  name        String
  description String?
  dataType    String
  isRequired  Boolean  @default(false)
  isActive    Boolean  @default(true)
  createdOn   DateTime @default(now())
  createdBy   String
  updatedOn   DateTime @default(now())
  updatedBy   String
  activityId  String
  activity    Activity @relation(fields: [activityId], references: [id])
  values      Value[]
}

model Record {
  id          String   @id @default(uuid())
  name        String
  description String?
  createdOn   DateTime @default(now())
  createdBy   String
  updatedOn   DateTime @default(now())
  updatedBy   String
  activityId  String
  activity    Activity @relation(fields: [activityId], references: [id])
  values      Value[]
}

model Value {
  recordId  String
  fieldId   String
  data      String?
  createdOn DateTime @default(now())
  createdBy String
  updatedOn DateTime @default(now())
  updatedBy String
  record    Record @relation(fields: [recordId], references: [id], onUpdate: NoAction, onDelete: NoAction)
  metric    Metric @relation(fields: [fieldId], references: [id], onUpdate: NoAction, onDelete: NoAction)
  @@id([recordId, fieldId])
}